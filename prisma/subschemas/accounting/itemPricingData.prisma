model ItemPricingData {
    id                         String                   @id @default(uuid())
    itemId                     String                   @map("item_id")
    arrivalCost                Float                    @map("arrival_cost")
    productionUsageCost        Float                    @map("productionUsageCost")
    auxiliaryUsageCost         Float                    @default(0) @map("auxiliary_usage_cost")
    unforeseenDifficultiesCost Float                    @map("unforeseen_difficulties_cost")
    isUpcomingPriceActive      Boolean                  @map("isUpcomingPriceActive")
    upcomingPrice              Float                    @map("upcomingPrice")
    upcomingPriceUomId         String                   @map("upcoming_price_uom_id")
    overallItemCost            Float                    @default(0) @map("overall_item_cost")
    createdAt                  DateTime                 @default(now()) @map("created_at")
    updatedAt                  DateTime                 @updatedAt @map("updated_at")
    item                       Item                     @relation(fields: [itemId], references: [id])
    upcomingPriceUom           UnitOfMeasurement        @relation(fields: [upcomingPriceUomId], references: [id])
    ItemPricingDataArchives    ItemPricingDataArchive[]

    @@map("item_pricing_data")
}
